{"version":3,"sources":["./src/app/interfaces/task-type-enum.ts","./src/app/services/websockets.service.ts","./src/app/directives/drag-drop.directive.ts","./src/environments/environment.ts","./src/app/interfaces/task-status-enum.ts","./src/app/services/messages.service.ts","./src/app/services/notifications.service.ts","./src/app/components/model/model.component.ts","./src/app/components/model/model.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/interfaces/response-status.ts","./src/app/components/list-element/list-element.component.ts","./src/app/components/list-element/list-element.component.html","./src/app/services/back.service.ts","./src/app/interfaces/task.ts","./src/app/constants.ts","./src/app/services/storage.service.ts","./src/app/interfaces/forms/optimization-enum.ts","./src/app/services/validation.service.ts","./src/app/interfaces/model.ts","./src/app/interfaces/forms/medium-enum.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export enum TaskTypeEnum {\n  COMPUTE_GROWTH_DEPENDENT = 0,\n  COMPUTE_CRITICAL_REACTIONS = 1,\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { map } from 'rxjs/operators';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketsService {\n\n  constructor(private socket: Socket) { }\n\n  sendMessage(msg: string): void {\n    this.socket.emit('message', msg);\n  }\n\n  joinRoom(roomName: string): void {\n    this.socket.emit('join', roomName);\n  }\n\n  getMessage(fromEvent: string): Observable<any>{\n    return this.socket\n      .fromEvent(fromEvent)\n      .pipe(map((data) => {\n          console.log(data);\n          return data;\n        }\n      ));\n  }\n\n}\n","import {\n  Directive,\n  Output,\n  Input,\n  EventEmitter,\n  HostBinding,\n  HostListener\n} from '@angular/core';\n\n@Directive({\n  selector: '[appDragDrop]'\n})\nexport class DragDropDirective {\n  @HostBinding('class.fileover') fileOver: boolean;\n  @Output() fileDropped = new EventEmitter<any>();\n\n  // Dragover listener\n  @HostListener('dragover', ['$event']) onDragOver(evt) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.fileOver = true;\n  }\n\n  // Dragleave listener\n  @HostListener('dragleave', ['$event']) public onDragLeave(evt) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.fileOver = false;\n  }\n\n  // Drop listener\n  @HostListener('drop', ['$event']) public ondrop(evt) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.fileOver = false;\n    // propagate file on drop event\n    let files = evt.dataTransfer.files;\n    if (files.length > 0) {\n      this.fileDropped.emit(files);\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\n  // Note that EXPIRY_TASKS must be: EXPIRY_MODELS >= EXPIRY_TASKS\n  EXPIRY_MODELS: 48, // 2 days\n  EXPIRY_TASKS: 48, // 2 days\n\n  websocketEndpoint: 'ws://localhost:5000',\n  baseApiUrl: 'http://localhost:5000',\n  baseApiUrlStatic: 'http://localhost:5000/static/',\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export enum TaskStatusEnum {\n  WAITING_OPERATION,\n  IN_QUEUE,\n  RUNNING,\n  DONE,\n  EXPIRED,\n  FAILURE\n}\n","import { Injectable } from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {Model} from '../interfaces/model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessagesService {\n\n  constructor() { }\n\n  private modelsChanged = new Subject<string>();\n  private newModel = new Subject<string>();\n  modelsChanged$ = this.modelsChanged.asObservable();\n  newModel$ = this.newModel.asObservable();\n\n  notifyModelChange(model: Model) {\n    this.modelsChanged.next(model.uuid);\n  }\n\n  notifyNewModel() {\n    this.newModel.next('');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport {Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private sInfo = new Subject<string>();\n  private sSuccess = new Subject<string>();\n  private sError = new Subject<string>();\n  info$ = this.sInfo.asObservable();\n  success$ = this.sSuccess.asObservable();\n  error$ = this.sError.asObservable();\n\n  constructor(private toastr: ToastrService) { }\n\n  initComponent(): void {\n    // This method should be called by the parent component that will\n    // display all notifications\n    // It should be called by child components as the notifications\n    // will appear at the child component position\n\n    this.info$.subscribe((msg: string) => this.toastr.info(msg, '', {positionClass: 'toast-bottom-right' }));\n    this.success$.subscribe((msg: string) => this.toastr.success(msg, '', {positionClass: 'toast-bottom-right' }));\n    this.error$.subscribe((msg: string) => this.toastr.error(msg, '', {positionClass: 'toast-bottom-right' }));\n  }\n\n  info(message: string): void {\n    this.sInfo.next(message);\n  }\n\n  success(message: string): void {\n    this.sSuccess.next(message);\n  }\n\n  error(message: string): void {\n    this.sError.next(message);\n  }\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Model, process_model_expiry} from '../../interfaces/model';\nimport {TaskStatusEnum} from '../../interfaces/task-status-enum';\nimport {Observable, Observer, Subject, timer} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {map, retry, switchMap, take, takeUntil} from 'rxjs/operators';\nimport {StorageService} from '../../services/storage.service';\nimport {MessagesService} from '../../services/messages.service';\nimport {TaskTypeEnum} from '../../interfaces/task-type-enum';\nimport {BackService} from '../../services/back.service';\nimport {ResponseTaskGrowthDependent} from '../../interfaces/response-task-growth-dependent';\nimport {ResponseStatus} from '../../interfaces/response-status';\nimport {Constants} from '../../constants';\nimport {process_task_expiry} from '../../interfaces/task';\nimport {FormGrowthDependent} from '../../interfaces/forms/form-growth-dependent';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {ValidationService} from '../../services/validation.service';\nimport {FormReactions} from '../../interfaces/forms/form-reactions';\nimport {MediumEnum, MediumEnumView, MediumView} from '../../interfaces/forms/medium-enum';\nimport {OptimizationEnum, OptimizationEnumView, OptimizationView} from '../../interfaces/forms/optimization-enum';\nimport {WebsocketsService} from '../../services/websockets.service';\nimport {ResponseTaskCriticalReactions} from '../../interfaces/response-task-critical-reactions';\nimport {NgxLogMessage} from '../../interfaces/ngx-log-message';\nimport {NotificationsService} from '../../services/notifications.service';\n\n\n@Component({\n  selector: '[app-model]',\n  templateUrl: './model.component.html',\n  styleUrls: ['./model.component.css']\n})\nexport class ModelComponent implements OnInit {\n\n  @Input() model: Model;\n\n  public taskStatusEnum = TaskStatusEnum;\n  private taskStatusInfo$: Observable<any>;\n  private taskObserver$: Observable<any>;\n  private stopPolling = new Subject();\n\n  optimizationEnumView: OptimizationView[] = OptimizationEnumView.optimization;\n  mediumEnumView: MediumView[]       = MediumEnumView.medium;\n\n  formGrowthDependentGroup: FormGroup;\n  formReactionsSetsGroup: FormGroup;\n  formCGrowthDependentInitialValues: FormGrowthDependent = {\n    uuid: undefined,\n    objective: undefined,\n  };\n\n  formReactionsInitialValues: FormReactions = {\n    uuid: undefined,\n    objective: undefined,\n    fraction_of_optimum: 1.0,\n  };\n\n  restoredLogs: NgxLogMessage[] = [];\n\n  private logStream = new Subject<NgxLogMessage>();\n  logStream$ = this.logStream.asObservable();\n\n  constructor(private http: HttpClient, private storageService: StorageService, private messagesService: MessagesService,\n              private backService: BackService, private validationService: ValidationService,\n              private websocketsService: WebsocketsService, private notificationsService: NotificationsService) { }\n\n  ngOnInit(): void {\n\n    /********************************************************************************************/\n    /* FORM VALIDATION */\n    this.formGrowthDependentGroup = new FormGroup({\n      uuid: new FormControl(this.formCGrowthDependentInitialValues.uuid),\n      objective: new FormControl(this.formCGrowthDependentInitialValues.objective, []),\n    }, { validators: this.validationService.formGrowthDependentValidator });\n\n    this.formReactionsSetsGroup = new FormGroup({\n      uuid: new FormControl(this.formReactionsInitialValues.uuid),\n      fraction_of_optimum: new FormControl(this.formReactionsInitialValues.fraction_of_optimum, [\n        this.validationService.minMaxValidator(Constants.MIN_FRACTION_OPTIMUM, Constants.MAX_FRACTION_OPTIMUM),\n      ]),\n      objective: new FormControl(this.formReactionsInitialValues.objective, []),\n    }, { validators: this.validationService.formReactionsValidator });\n\n    /********************************************************************************************/\n    /* STATUS RECOVERY */\n    // celery wont give expiry info\n    // have to save and calculate manually\n    process_model_expiry(this.model, Constants.EXPIRY_MODELS, new Date());\n\n    // check individual task have not expired\n    for (let i = 0; i < this.model.tasks.length; i++) {\n      process_task_expiry(this.model.tasks[i], Constants.EXPIRY_TASKS, new Date());\n    }\n\n    // restart the process of checking running tasks\n    for (let i = 0; i < this.model.tasks.length; i++) {\n      if (this.model.tasks[i].status == TaskStatusEnum.IN_QUEUE\n        // tslint:disable-next-line:triple-equals\n        || this.model.tasks[i].status == TaskStatusEnum.RUNNING) {\n\n        switch (this.model.tasks[i].type) {\n          case TaskTypeEnum.COMPUTE_GROWTH_DEPENDENT:\n            this.periodicallyCheckGrowthDependent(this.model.tasks[i].uuid);\n            break;\n          case TaskTypeEnum.COMPUTE_CRITICAL_REACTIONS:\n            this.periodicallyCheckReactionsSets(this.model.tasks[i].uuid);\n            break;\n          default:\n            // unknown task\n            break;\n        }\n\n        // if task is already running, subscribe again to socket-io channel\n        // channel is given by the model id\n        if (this.model.tasks[i].status == TaskStatusEnum.RUNNING) {\n          this.websocketsService.joinRoom(this.model.uuid);\n          this.websocketsService.getMessage(this.model.uuid).subscribe(\n            (data) => {\n              this.manageWebsocketMessage(data.data);\n            }\n          );\n        }\n\n      }\n    }\n\n  }\n\n  periodicallyCheckGrowthDependent(task_uuid: string): void {\n    this.taskStatusInfo$ = this.checkTasksGrowthDependent(task_uuid);\n    this.taskStatusInfo$.subscribe(\n      (result) => {\n\n        console.log('recibido');\n        console.log(result);\n\n        const response = result.body as ResponseTaskGrowthDependent;\n        const pending_length = response.pending_length;\n\n        if (response.finished == false) {\n          if (response.status == ResponseStatus.FAILURE) {\n            this.stopCheckTasks();\n            this.setStatusForTask(task_uuid, TaskStatusEnum.FAILURE, this.model);\n            // notify the error\n            this.notificationsService.error(`Error computing task on model: ${this.model.file}`);\n          } else if (response.status == ResponseStatus.PENDING) {\n            // model is already in status IN QUEUE\n            this.model.pending_length = pending_length;\n            this.storageService.updateModel(this.model);\n          } else {\n            this.setStatusForTask(task_uuid, TaskStatusEnum.RUNNING, this.model);\n            this.storageService.updateModel(this.model);\n          }\n\n        } else {\n\n          // task has ended succesfully!\n          this.stopCheckTasks();\n          this.model.file_html = Constants.baseApiUrlStatic + response.file_html;\n          this.model.file_spreadsheet = Constants.baseApiUrlStatic + response.file_spreadsheet;\n          this.setStatusForTask(task_uuid, TaskStatusEnum.DONE, this.model);\n          this.storageService.updateModel(this.model);\n\n          // notify that the task has ended\n          this.notificationsService.success(`Growth dependent computation finished successfully on model: ${this.model.file}`);\n\n        }\n\n      },\n      (error) => {\n        if (error.status === 404) {\n          this.stopCheckTasks();\n          this.setStatusForTask(task_uuid, TaskStatusEnum.EXPIRED, this.model);\n        }\n        else {\n          this.stopCheckTasks();\n          this.setStatusForTask(task_uuid, TaskStatusEnum.FAILURE, this.model);\n        }\n      }\n    );\n  }\n\n  get form_cp_objective()           { return this.formGrowthDependentGroup.get('objective'); }\n\n  get form_reacs_fraction_of_optimum() { return this.formReactionsSetsGroup.get('fraction_of_optimum'); }\n  get form_reacs_objective()           { return this.formReactionsSetsGroup.get('objective'); }\n\n\n  periodicallyCheckReactionsSets(task_uuid: string): void {\n    this.taskStatusInfo$ = this.checkTasksReactionsSets(task_uuid);\n    console.log('Suscribing...');\n    this.taskStatusInfo$.subscribe(\n      (result) => {\n        console.log('Result:');\n        console.log(result);\n\n        const response = result.body as ResponseTaskCriticalReactions;\n        const pending_length = response.pending_length;\n\n        if (response.finished == false) {\n\n          if (response.status == ResponseStatus.FAILURE) {\n            this.stopCheckTasks();\n            this.setStatusForTask(task_uuid, TaskStatusEnum.FAILURE, this.model);\n            // notify the error\n            this.notificationsService.error(`Error computing task on model: ${this.model.file}`);\n          } else if (response.status == ResponseStatus.PENDING) {\n            // model is already in status IN QUEUE\n            this.model.pending_length = pending_length;\n            this.storageService.updateModel(this.model);\n          } else {\n            this.setStatusForTask(task_uuid, TaskStatusEnum.RUNNING, this.model);\n            this.storageService.updateModel(this.model);\n          }\n\n        } else {\n\n          // task has finished successfully !\n          this.stopCheckTasks();\n          this.model.file_html = Constants.baseApiUrlStatic + response.file_html;\n          this.model.file_spreadsheet = Constants.baseApiUrlStatic + response.file_spreadsheet;\n          this.setStatusForTask(task_uuid, TaskStatusEnum.DONE, this.model);\n          this.storageService.updateModel(this.model);\n\n          // notify that the task has ended\n          this.notificationsService.success(`Critical reactions computation finished successfully on model: ${this.model.file}`);\n\n        }\n\n      },\n      (error) => {\n        console.log('Error!');\n        if (error.status === 404) {\n          this.stopCheckTasks();\n          this.setStatusForTask(task_uuid, TaskStatusEnum.EXPIRED, this.model);\n        }\n        else {\n          this.stopCheckTasks();\n          this.setStatusForTask(task_uuid, TaskStatusEnum.FAILURE, this.model);\n        }\n      },\n      () => {\n        console.log('Complete?');\n      }\n    );\n  }\n\n\n  operationComputeGrowthDependent(model: Model): void {\n\n    // The field 'restoredLogs', which is used for the component 'log-monitor'\n    // as history is emptied, as it might have logs from previous operations.\n    this.restoredLogs = [];\n\n    // subscribe to websocket\n    try {\n      this.websocketsService.joinRoom(model.uuid);\n      this.websocketsService.getMessage(model.uuid).subscribe(\n        (data) => {\n          this.manageWebsocketMessage(data.data);\n        }\n      );\n    } catch (error) {\n      console.error(error);\n    }\n\n    // notify that the process has been queued\n    this.notificationsService.info(`Task on model: ${model.file} has been queued`);\n\n    // update list of models tasks and store in cookies\n    // in order to track model status\n    model.tasks[0].status = TaskStatusEnum.IN_QUEUE;\n    this.storageService.updateModel(model);\n\n    // build form values to be used on the endpoint request\n    const formValues: FormGrowthDependent = this.formGrowthDependentGroup.getRawValue();\n    formValues.uuid = model.uuid;\n\n    this.backService.computeGrowthDependent(formValues).subscribe(\n      (response) => {\n\n        const task_uuid      = response.body.task_id;\n        const pending_length = response.body.pending_length;\n        model.tasks[0].uuid = task_uuid;\n        model.pending_length = pending_length;\n        this.setStatusForTask(task_uuid, TaskStatusEnum.IN_QUEUE, this.model);\n        this.initTypeForTask(task_uuid, TaskTypeEnum.COMPUTE_GROWTH_DEPENDENT, this.model);\n        this.storageService.updateModel(model);\n        console.log('task uuid: ' + task_uuid);\n\n        this.periodicallyCheckGrowthDependent(task_uuid);\n\n      },\n      (error) => {\n        if (error.status === 404) {\n          this.model.tasks[0].status = TaskStatusEnum.EXPIRED;\n        }\n        else {\n          this.model.tasks[0].status = TaskStatusEnum.FAILURE;\n          // TODO: manage unexpected error\n        }\n      }\n    );\n    // suscribe\n\n  }\n\n  operationComputeReactionsSets(model: Model) {\n\n    // The field 'restoredLogs', which is used for the component 'log-monitor'\n    // as history is emptied, as it might have logs from previous operations.\n    this.restoredLogs = [];\n\n    // subscribe to websocket\n    this.websocketsService.joinRoom(model.uuid);\n    this.websocketsService.getMessage(model.uuid).subscribe(\n      (data) => {\n        this.manageWebsocketMessage(data.data);\n      }\n    );\n\n    // notify that the process has been queued\n    this.notificationsService.info(`Task on model: ${model.file} has been queued`);\n\n    // update list of models tasks and store in cookies\n    // in order to track model status\n    model.tasks[0].status = TaskStatusEnum.IN_QUEUE;\n    this.storageService.updateModel(model);\n\n    // build form values to be used on the endpoint request\n    const formValues: FormReactions = this.formReactionsSetsGroup.getRawValue();\n    formValues.uuid = model.uuid;\n\n    this.backService.computeReactionsSet(formValues).subscribe(\n      (response) => {\n\n        const task_uuid      = response.body.task_id;\n        const pending_length = response.body.pending_length;\n        model.tasks[0].uuid = task_uuid;\n        model.pending_length = pending_length;\n        this.setStatusForTask(task_uuid, TaskStatusEnum.IN_QUEUE, model);\n        this.initTypeForTask(task_uuid, TaskTypeEnum.COMPUTE_CRITICAL_REACTIONS, model);\n        this.storageService.updateModel(model);\n        console.log('task uuid: ' + task_uuid);\n\n        this.periodicallyCheckReactionsSets(task_uuid);\n\n      },\n      (error) => {\n        if (error.status === 404) {\n          this.model.tasks[0].status = TaskStatusEnum.EXPIRED;\n        }\n        else {\n          this.model.tasks[0].status = TaskStatusEnum.FAILURE;\n          // TODO: manage unexpected error\n        }\n      }\n    );\n    // suscribe\n\n  }\n\n  checkTasksGrowthDependent(task_uuid: string): Observable<any> {\n\n    const url = `/results/${task_uuid}/growth_dependent_reactions`;\n\n    console.log('Init timer...');\n\n    this.taskObserver$ = timer(5000, 5000).pipe(\n      switchMap(() => this.backService.getGrowthDependentTasks(task_uuid)),\n      retry(5), // retry 5 times if error\n      takeUntil(this.stopPolling)\n    );\n\n    return this.taskObserver$;\n  }\n\n  checkTasksReactionsSets(task_uuid: string): Observable<any> {\n\n    this.taskObserver$ = timer(5000, 5000).pipe(\n      switchMap(\n        () => this.backService.getCriticalReactionTasks(task_uuid)\n      ),\n    retry(5), // retry 5 times if error\n      takeUntil(this.stopPolling)\n    );\n\n    return this.taskObserver$;\n  }\n\n  stopCheckTasks() {\n    this.stopPolling.next();\n  }\n\n\n  deleteModel(model: Model) {\n    this.storageService.popModel(model);\n    this.messagesService.notifyModelChange(model);\n  }\n\n  initTypeForTask(task_uuid: string, task_type: TaskTypeEnum, model: Model) {\n    for (let i = 0; i < model.tasks.length; i++) {\n      if (model.tasks[i].uuid == task_uuid) {\n        model.tasks[i].type = task_type;\n        model.tasks[i].init_date = new Date();\n        break;\n      }\n    }\n  }\n\n  setStatusForTask(task_uuid: string, task_status: TaskStatusEnum, model: Model) {\n    for (let i = 0; i < model.tasks.length; i++) {\n      if (model.tasks[i].uuid == task_uuid) {\n        model.tasks[i].status = task_status;\n        break;\n      }\n    }\n  }\n\n  private manageWebsocketMessage(data: any): void {\n    const newLog: NgxLogMessage = {message: data, type: 'INFO'};\n    // If the model task is still in the tasks queue\n    // but we have already received log messages, meaning that the task has already started\n    // but the webpage is not yet aware.\n    // We save the log in the 'restoredLogs' which will be shown in the 'log-monitor' component\n    // once the model task status is updated to RUNNING\n    if (this.model.tasks[0].status === TaskStatusEnum.IN_QUEUE) {\n      this.restoredLogs.push(newLog);\n    }\n    // the log message is either way passed to the 'logStream' subject,\n    // which is consumed by the 'log-monitor' component.\n    this.logStream.next(newLog);\n  }\n}\n","\n\n<div [ngSwitch]=model.tasks[0].status class=\"operations-accordion\">\n  <div *ngSwitchCase=\"taskStatusEnum.WAITING_OPERATION\">\n    <mat-accordion>\n      <!-- #docregion basic-panel -->\n      <!-- #docregion hide-toggle -->\n      <mat-expansion-panel>\n        <!-- #enddocregion hide-toggle -->\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            Compute growth dependent reactions\n          </mat-panel-title>\n          <mat-panel-description>\n          </mat-panel-description>\n        </mat-expansion-panel-header>\n\n        <form [formGroup]=\"formGrowthDependentGroup\" #formDir=\"ngForm\">\n          <div class=\"cross-validation\" [class.cross-validation-error]=\"\n          formGrowthDependentGroup.errors?.formGrowthDependentValidator\n          && (formGrowthDependentGroup.touched\n          || formGrowthDependentGroup.dirty)\">\n            <div class=\"form-group\">\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Objective</mat-label>\n                <input matInput class=\"form-control\"\n                       formControlName=\"objective\">\n              </mat-form-field>\n\n            </div>\n          </div>\n          <button mat-raised-button class=\"execute-button\" color=\"primary\" [disabled]=\"formGrowthDependentGroup.invalid\" (click)=\"operationComputeGrowthDependent(model)\">Execute</button>\n\n        </form>\n\n      </mat-expansion-panel>\n\n      <mat-expansion-panel>\n        <!-- #enddocregion hide-toggle -->\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            Critical reactions report\n          </mat-panel-title>\n          <mat-panel-description>\n            <!--This is a summary of the content-->\n          </mat-panel-description>\n        </mat-expansion-panel-header>\n\n        <form [formGroup]=\"formReactionsSetsGroup\" #formDir=\"ngForm\">\n          <div class=\"cross-validation\"\n               [class.cross-validation-error]=\"formReactionsSetsGroup.errors?.formReactionsValidator\n               && (formReactionsSetsGroup.touched || formReactionsSetsGroup.dirty)\">\n\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Fraction of optimum</mat-label>\n              <input matInput class=\"form-control\"\n                     formControlName=\"fraction_of_optimum\" type=\"number\" step=\".05\">\n              <mat-error *ngIf=\"form_reacs_fraction_of_optimum.invalid && (form_reacs_fraction_of_optimum.dirty || form_reacs_fraction_of_optimum.touched)\">\n                <div *ngIf=\"form_reacs_fraction_of_optimum.errors.invalidMinMax\">\n                  Fraction of optimum must be between 0.0 and 1.0\n                </div>\n              </mat-error>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Objective</mat-label>\n              <input matInput class=\"form-control\"\n                     formControlName=\"objective\">\n            </mat-form-field>\n\n            <!--\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Optiization method</mat-label>\n              <mat-select formControlName=\"optimization\">\n                <mat-option *ngFor=\"let optimization of optimizationEnumView\" [value]=\"optimization.value\" >\n                  {{optimization.viewValue}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n            -->\n\n            <button mat-raised-button class=\"execute-button\" color=\"primary\" [disabled]=\"formReactionsSetsGroup.invalid\" (click)=\"operationComputeReactionsSets(model)\">Execute</button>\n          </div>\n        </form>\n\n      </mat-expansion-panel>\n    </mat-accordion>\n  </div>\n  <span *ngSwitchCase=\"taskStatusEnum.IN_QUEUE\">\n    <div *ngIf=\"model.pending_length == 0; then noTaskBlock else multipleTaskBlock\"></div>\n      <ng-template #noTaskBlock>Queued.</ng-template>\n      <ng-template #multipleTaskBlock>Queued. Position: {{model.pending_length}}</ng-template>\n  </span>\n  <div *ngSwitchCase=\"taskStatusEnum.RUNNING\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n        <log-monitor\n          [logStream]=\"logStream$ | async\"\n          theme=\"light\"\n          title=\"Log\"\n          [animated]=\"true\"\n          [icons]=\"true\"\n          [history]=\"restoredLogs\"\n          class=\"log-monitor\"\n        ></log-monitor>\n  </div>\n  <div *ngSwitchCase=\"taskStatusEnum.DONE\">\n    <a href=\"{{model.file_html}}\">\n      <button class=\"action-button\" mat-raised-button color=\"basic\">View Report</button>\n    </a>\n    <a href=\"{{model.file_spreadsheet}}\">\n      <button class=\"action-button\" mat-raised-button color=\"basic\">Download spreadsheet <mat-icon aria-hidden=\"false\">download_file</mat-icon></button>\n    </a>\n  </div>\n  <span *ngSwitchCase=\"taskStatusEnum.EXPIRED\">Expired</span>\n  <span *ngSwitchCase=\"taskStatusEnum.FAILURE\">Error: Something went wrong...</span>\n</div>\n\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {Model} from './interfaces/model';\nimport {TaskStatusEnum} from './interfaces/task-status-enum';\nimport {BackService} from './services/back.service';\nimport {StorageService} from './services/storage.service';\nimport {MessagesService} from './services/messages.service';\nimport {Task} from './interfaces/task';\nimport {WebsocketsService} from './services/websockets.service';\nimport {NotificationsService} from './services/notifications.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  @ViewChild('fileDropRef', { static: false }) fileDropEl: ElementRef;\n  files: any[] = [];\n  models: Model[] = [];\n\n  error_reading_file: boolean;\n  error_text = '';\n  loading_file: boolean;\n\n\n  ngOnInit(): void {\n\n    this.models = this.storageService.getModels();\n\n    this.messagesService.modelsChanged$.subscribe(\n      model_uuid => this.models = this.storageService.getModels()\n    );\n\n    this.loading_file = false;\n\n    // Initializa toast notificaitons\n    // As this component is the parent component, it will hold and show\n    // all received toast notifications that child component have published\n    this.notificationsService.initComponent();\n\n  }\n\n  constructor(private backService: BackService,\n              private storageService: StorageService,\n              private messagesService: MessagesService,\n              private notificationsService: NotificationsService) { }\n\n  /**\n   * on file drop handler\n   */\n  onFileDropped($event) {\n    this.processFilesList($event);\n  }\n\n  /**\n   * handle file from browsing\n   */\n  fileBrowseHandler(files) {\n    this.processFilesList(files);\n  }\n\n  /**\n   * Delete file from files list\n   * @param index (File index)\n   */\n  deleteFile(index: number) {\n    if (this.files[index].progress < 100) {\n      console.log('Upload in progress.');\n      return;\n    }\n    this.storageService.popModel(this.models[index]);\n    this.files.splice(index, 1);\n  }\n\n  /**\n   * Convert Files list to normal array list\n   * @param files (Files List)\n   */\n  processFilesList(files: Array<any>) {\n    for (const item of files) {\n      item.progress = 0;\n      this.files.push(item);\n\n      this.loading_file = true;\n      // restore error flag (i.e. 'error_reading_file') and error message prompted (i.e. 'error_text')\n      // when a new file is submitted\n      this.error_reading_file = false;\n      this.error_text = '';\n\n      this.backService.upload(item).subscribe(\n        (response) => {\n\n          if (response.status == 200) {\n\n            // File and model read succesfully !\n            this.error_reading_file = false;\n            const new_model: Model = {\n              file: item.name,\n              submitted: new Date(),\n              uuid: response.body.model_uuid,\n              file_html: '',\n              file_spreadsheet: '',\n              metabolites: response.body.metabolites,\n              reactions: response.body.reactions,\n              genes: response.body.genes,\n              tasks: [{\n                type: undefined,\n                uuid: undefined,\n                status: TaskStatusEnum.WAITING_OPERATION,\n                init_date: undefined\n              }],\n              pending_length: 0\n            };\n            this.storageService.pushModel(new_model);\n            this.models.push(new_model);\n            this.messagesService.notifyNewModel();\n            // Notify that the model has been read succesfully to show a toast notification\n            this.notificationsService.info(`File ${item.name} read successfully`);\n            console.log(this.models);\n\n          }\n\n          // Or any other header:\n          console.log(response.headers.get('X-Custom-Header'));\n          this.loading_file = false;\n        },\n        (err) => {\n          console.log('HTTP Error', err);\n          this.error_reading_file = true;\n          this.error_text = err.error.message;\n          this.loading_file = false;\n          // Notify that there was an error reading the file in a toast notification\n          this.notificationsService.error(`Error reading file ${item.name}`);\n        },\n      );\n    }\n\n    this.fileDropEl.nativeElement.value = '';\n  }\n\n  /**\n   * format bytes\n   * @param bytes (File size in bytes)\n   * @param decimals (Decimals point)\n   */\n  formatBytes(bytes, decimals = 2) {\n    if (bytes === 0) {\n      return '0 Bytes';\n    }\n    const k = 1024;\n    const dm = decimals <= 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n\n  popModel(index: number) {\n    this.storageService.popModel(this.models[index]);\n    this.models.splice(index, 1);\n  }\n\n  pushModel(model: Model) {\n    this.storageService.pushModel(model);\n    this.models.push(model);\n  }\n\n}\n","<body class=\"mat-typography\">\n\n  <nav>\n    <div class=\"nav-wrapper mat-elevation-z6\">\n      <a href=\"\" class=\"brand-logo\" id=\"model_name\">CONTRABASS</a>\n      <ul class=\"right\">\n        <li><a href=\"https://contrabass.readthedocs.io/en/latest/?badge=latest\" class=\"header-link\">\n          <i class=\"fa fa-file-alt\" style=\"color:white\"></i><div class=\"header-link-text hide-on-med-and-down\">Documentation</div>\n        </a></li>\n        <li><a href=\"https://github.com/openCONTRABASS/CONTRABASS\" class=\"header-link\">\n          <i class=\"fab fa-github\" style=\"color:white\"></i><div class=\"header-link-text hide-on-med-and-down\">Github</div>\n        </a></li>\n      </ul>\n    </div>\n  </nav>\n\n  <main>\n\n\n    <div class=\"drop-container-container\">\n      <mat-card class=\"drop-container-card mat-elevation-z6\" >\n          <div class=\"drop-container\" (fileDropped)=\"onFileDropped($event)\" appDragDrop>\n            <input type=\"file\" #fileDropRef id=\"fileDropRef\" multiple (change)=\"fileBrowseHandler($event.target.files)\" />\n            <img src=\"assets/img/ic-upload-file.svg\" alt=\"\">\n            <h3>Drag and drop SBML model here</h3>\n            <h3>or</h3>\n            <label for=\"fileDropRef\">Browse for model</label>\n          </div>\n      </mat-card>\n    </div>\n\n\n    <div *ngIf=\"loading_file\">\n      <div class=\"progress-container\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n      </div>\n    </div>\n\n    <div *ngIf=\"error_reading_file\">\n      <mat-card class=\"error-card\">\n        <mat-card-content>\n          Error reading file:\n          {{ error_text }}\n        </mat-card-content>\n      </mat-card>\n    </div>\n\n    <app-list-element [models]=\"models\"></app-list-element>\n\n  </main>\n\n  <!-- Define the footer -->\n  <footer class=\"page-footer\">\n    <div class=\"footer-copyright darken-3\">\n      <div class=\"container \">\n        © 2021 Alex Oarga <718123 at unizar.es>\n        <a class=\"grey-text\n            text-lighten-4 right\" href=\"https://github.com/openCONTRABASS\">\n          CONTRABASS organization\n        </a>\n      </div>\n    </div>\n  </footer>\n\n  <!-- Compiled and minified CSS -->\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\">\n\n  <!-- Compiled and minified JavaScript -->\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js\"></script>\n\n\n</body>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { DragDropDirective } from './directives/drag-drop.directive';\nimport { ListElementComponent } from './components/list-element/list-element.component';\nimport { ModelComponent } from './components/model/model.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatOptionModule } from \"@angular/material/core\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\nimport { LogMonitorModule } from 'ngx-log-monitor';\n\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nimport { Constants } from './constants';\nimport {A11yModule} from '@angular/cdk/a11y';\n\nimport { ToastrModule } from 'ngx-toastr';\n\nconst config: SocketIoConfig = { url: Constants.websocketEndpoint, options: {} };\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DragDropDirective,\n    ListElementComponent,\n    ModelComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatExpansionModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatInputModule,\n    BrowserModule,\n    SocketIoModule.forRoot(config),\n    MatIconModule,\n    MatCardModule,\n    MatTableModule,\n    MatProgressBarModule,\n    A11yModule,\n    LogMonitorModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export enum ResponseStatus {\n  PENDING = 'PENDING',\n  STARTED = 'STARTED',\n  RETRY = 'RETRY',\n  FAILURE = 'FAILURE',\n  SUCCESS = 'SUCCESS',\n}\n","import {ChangeDetectorRef, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {Model} from '../../interfaces/model';\nimport {TaskStatusEnum} from '../../interfaces/task-status-enum';\nimport {BackService} from '../../services/back.service';\nimport {Observable} from 'rxjs';\nimport {StorageService} from '../../services/storage.service';\nimport {MessagesService} from '../../services/messages.service';\nimport {MatTable} from '@angular/material/table';\n\n\n@Component({\n  selector: 'app-list-element',\n  templateUrl: './list-element.component.html',\n  styleUrls: ['./list-element.component.css']\n})\nexport class ListElementComponent implements OnInit {\n\n  @Input() models: Model[];\n  @ViewChild(MatTable) myTable!: MatTable<any>;\n\n\n  displayedColumns: string[] = ['file', 'date', 'metabolites', 'reactions', 'genes', 'model', 'delete'];\n\n  constructor(private storageService: StorageService, private messagesService: MessagesService,\n              private changeDetectorRefs: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  deleteModel(model: Model): void {\n    this.storageService.popModel(model);\n    this.messagesService.notifyModelChange(model);\n  }\n\n  refresh() {\n      this.messagesService.newModel$.subscribe((data: string) => {\n        this.myTable.renderRows();\n    });\n  }\n\n}\n\n\n\n\n","\n<div class=\"table-container\">\n  <table #myTable mat-table [dataSource]=\"models\" class=\"mat-elevation-z8 table-models\">\n\n    <ng-container matColumnDef=\"file\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.file}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"date\">\n      <th mat-header-cell *matHeaderCellDef> Updated </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.submitted | date:'shortDate'}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"metabolites\">\n      <th mat-header-cell *matHeaderCellDef> Metabolites </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.metabolites}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"reactions\">\n      <th mat-header-cell *matHeaderCellDef> Reactions </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.reactions}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"genes\">\n      <th mat-header-cell *matHeaderCellDef> Genes </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.genes}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"model\">\n      <th mat-header-cell *matHeaderCellDef> Model </th>\n      <td mat-cell *matCellDef=\"let element; let i = index\">\n        <div app-model [model]=\"models[i]\"></div>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"delete\">\n      <th mat-header-cell *matHeaderCellDef>  </th>\n      <td mat-cell *matCellDef=\"let element; let i = index\">\n        <button mat-icon-button (click)=\"deleteModel(models[i])\">\n          <mat-icon color=\"basic\">delete</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport {Observable, Subject, timer} from 'rxjs';\nimport {retry, share, switchMap, takeUntil, tap} from 'rxjs/operators';\nimport {Model} from '../interfaces/model';\nimport {TaskStatusEnum} from '../interfaces/task-status-enum';\nimport {FormGrowthDependent} from '../interfaces/forms/form-growth-dependent';\nimport {FormReactions} from '../interfaces/forms/form-reactions';\nimport {Constants} from '../constants';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class BackService {\n\n  // API url\n  sumbitEndpoint = '/submit';\n\n  private taskObserver$: Observable<any>;\n  private stopPolling = new Subject();\n\n  constructor(private http: HttpClient) { }\n\n  // Returns an observable\n  upload(file): Observable<HttpResponse<any>> {\n\n    // Create form data\n    const formData = new FormData();\n\n    // Store form name as \"file\" with file data\n    formData.append('file', file, file.name);\n\n    // Make http post request over api\n    // with formData as req\n    return this.http.post(\n      Constants.baseApiUrl + this.sumbitEndpoint, formData, {observe: 'response'});\n  }\n\n  computeGrowthDependent(formGrowthDependentValues: FormGrowthDependent): Observable<any> {\n\n    console.log('Calling POST /growth_dependent_reactions');\n\n    const url = `/models/${formGrowthDependentValues.uuid}/growth_dependent_reactions`;\n\n    const formData = new FormData();\n    formData.append('uuid', formGrowthDependentValues.uuid);\n    if (formGrowthDependentValues.objective) {\n      formData.append('objective', formGrowthDependentValues.objective);\n    }\n\n    return this.http.post(\n      Constants.baseApiUrl + url, formData, {observe: 'response'});\n  }\n\n  computeReactionsSet(formReactions: FormReactions): Observable<any> {\n\n    console.log('Calling POST /critical_reactions');\n\n    const url = `/models/${formReactions.uuid}/critical_reactions`;\n\n    const formData = new FormData();\n    formData.append('uuid', formReactions.uuid);\n    if (formReactions.fraction_of_optimum) {\n      formData.append('fraction_of_optimum', formReactions.fraction_of_optimum.toString());\n    }\n    if (formReactions.objective) {\n      formData.append('objective', formReactions.objective);\n    }\n\n    return this.http.post(\n      Constants.baseApiUrl + url, formData, {observe: 'response'});\n  }\n\n  getGrowthDependentTasks(task_uuid: string): Observable<any> {\n\n    const url = `/results/${task_uuid}/growth_dependent_reactions`;\n\n    return this.http.get(Constants.baseApiUrl + url, {observe: 'response'});\n  }\n\n  getCriticalReactionTasks(task_uuid: string): Observable<any> {\n\n    const url = `/results/${task_uuid}/critical_reactions`;\n\n    return this.http.get(Constants.baseApiUrl + url, {observe: 'response'});\n  }\n\n  getTaskStatusObserver(): Observable<any> {\n    return this.taskObserver$;\n  }\n\n  stopCheckTasks() {\n    this.stopPolling.next();\n  }\n\n  ngOnDestroy() {\n    this.stopPolling.next();\n  }\n\n}\n","import {TaskTypeEnum} from \"./task-type-enum\";\nimport {TaskStatusEnum} from \"./task-status-enum\";\n\nexport interface Task {\n  uuid: string;\n  type: TaskTypeEnum;\n  status: TaskStatusEnum;\n  init_date: Date;\n\n}\n\nexport function process_task_expiry (task: Task, expiry_hours: number, current_date: Date) {\n  let hours_difference = Math.abs(current_date.getTime() - new Date(task.init_date).getTime()) / 36e5;\n  if (hours_difference > expiry_hours) {\n    task.status = TaskStatusEnum.EXPIRED;\n  }\n}\n\n\n\n","import {environment} from '../environments/environment';\n\nexport class Constants {\n\n  public static websocketEndpoint = environment.websocketEndpoint;\n  public static baseApiUrl = environment.baseApiUrl;\n  public static baseApiUrlStatic = environment.baseApiUrlStatic;\n\n  public static EXPIRY_MODELS = environment.EXPIRY_MODELS;\n  public static EXPIRY_TASKS = environment.EXPIRY_TASKS;\n\n  public static localStorageItemTasks = 'tasks';\n  public static localStorageItemModels = 'models';\n\n  public static RESPONSE_TASK_NONE = 'none';\n\n  public static ERROR_KEY_FRACTION_OPTIMUM = 'Fraction error';\n  public static ERROR_FRACTION_OPTIMUM = 'Fraction of optimum must be between 0.0 and 1.0';\n\n  public static MIN_FRACTION_OPTIMUM = 0.0;\n  public static MAX_FRACTION_OPTIMUM = 1.0;\n\n}\n","import { Injectable } from '@angular/core';\nimport {Model} from '../interfaces/model';\nimport {Constants} from '../constants';\nimport {Observable, of} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  constructor() { }\n\n  pushModel(model: Model): void {\n    let models = this.getModels();\n    models.push(model);\n    localStorage.setItem(Constants.localStorageItemModels, JSON.stringify(models));\n  }\n\n  popModel(modelInput: Model): void {\n    let models = this.getModels();\n    let index = -1;\n    for (let i = 0; i < models.length; i++) {\n      if (models[i].uuid === modelInput.uuid) {\n        index = i;\n        break;\n      }\n    }\n    models.splice(index, 1);\n    localStorage.setItem(Constants.localStorageItemModels, JSON.stringify(models));\n  }\n\n  updateModel(modelInput: Model): void {\n    let models = this.getModels();\n    const index = -1;\n    for (let i = 0; i < models.length; i++) {\n      if (models[i].uuid === modelInput.uuid) {\n        models[i] = modelInput;\n        break;\n      }\n    }\n    localStorage.setItem(Constants.localStorageItemModels, JSON.stringify(models));\n  }\n\n  getModels(): Model[] {\n    let models = localStorage.getItem(Constants.localStorageItemModels);\n    if (models === undefined || models == null) {\n      return [];\n    } else {\n      return JSON.parse(models);\n    }\n  }\n\n}\n","export enum OptimizationEnum {\n  FBA = \"FBA\",\n  pFBA = \"pFBA\"\n}\n\nexport interface OptimizationView {\n  value: OptimizationEnum;\n  viewValue: string;\n}\n\nexport class OptimizationEnumView {\n  static optimization: OptimizationView[] = [\n    {value: OptimizationEnum.FBA,  viewValue: 'FBA'},\n    {value: OptimizationEnum.pFBA, viewValue: 'pFBA'}\n  ];\n}\n","import { Injectable } from '@angular/core';\nimport {AbstractControl, ValidationErrors, ValidatorFn} from '@angular/forms';\nimport {Constants} from '../constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationService {\n\n  constructor() { }\n\n  minMaxValidator(minimum: number, maximum: number): ValidatorFn {\n    return (control: AbstractControl): {[key: string]: any} | null => {\n      let invalid = false;\n      if (control.value < minimum || control.value > maximum) {\n        invalid = true;\n      }\n      return invalid ? {invalidMinMax : {value: 'Fraction of optimum must be between 0.0 and 1.0'}} : null;\n    };\n  }\n\n  formGrowthDependentValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    return null;\n  }\n\n  formReactionsValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const fraction_of_optimum = control.get('fraction_of_optimum');\n\n    return fraction_of_optimum.invalid ? { invalidForm: true } : null;\n  }\n\n}\n","import {TaskStatusEnum} from \"./task-status-enum\";\nimport {Task} from \"./task\";\n\nexport interface Model {\n  file: string;\n  submitted: Date;\n  uuid: string;\n  file_html: string,\n  file_spreadsheet: string,\n  metabolites: number;\n  reactions: number;\n  genes: number;\n  tasks: Task[];\n  pending_length: number;\n\n}\n\nexport function process_model_expiry(model: Model, expiry_hours: number, current_date: Date) {\n  let hours_difference = Math.abs(current_date.getTime() - new Date(model.submitted).getTime()) / 36e5;\n  if (hours_difference > expiry_hours) {\n      for (let i = 0; i < model.tasks.length; i++) {\n        model.tasks[i].status = TaskStatusEnum.EXPIRED;\n      }\n  }\n}\n\n\n\n","export enum MediumEnum {\n  DEFAULT = \"DEFAULT\",\n  COMPLETE = \"COMPLETE\"\n}\n\nexport interface MediumView {\n  value: MediumEnum;\n  viewValue: string;\n}\n\nexport class MediumEnumView {\n  static medium: MediumView[] = [\n    {value: MediumEnum.DEFAULT,  viewValue: 'Default'},\n    {value: MediumEnum.COMPLETE, viewValue: 'Complete'}\n  ];\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}